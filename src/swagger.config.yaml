openapi: '3.0.3'
info:
  title: API Title
  version: '1.0'
  
paths:
  /test:
    $ref: './test.swagger.yaml'

  /user/:
    get:
      description: Gets user profile (user is identified by token)
      tags:
        - "profile"
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile is sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/user'
        '400':
          description: Something wrong :(

    put:
      description: Edits user info
      tags:
        - "profile"
      security:
        - bearerAuth: []
      requestBody:
        description: Info to edit
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                firstname:
                  type: string
                lastname:
                  type: string
                email:
                  type: string
                avatar:
                  type: string
                avatarname:
                  type: string
      responses:
        '400':
          description: Something wrong :(
          content:
            application/json:
              schema:
                type: object
                properties:
                  e:
                    type: object
                  error:
                    type: string

    delete:
      description: Used for user deletion
      security:
        - bearerAuth: []
      responses:
        '200':
         description: User is deleted
        '503':
         description: Database error
        '400':
         description: Error
         content:
           application/json:
            schema:
              type: object
              properties:
                err:
                  type: object

  /user/login:
    post:
      description: Logs in the user
      tags:
        - "login"
      requestBody:
        description: login credentials
        content:
          application/json:
            schema:
              type: object
              required:
                - "username"
                - "password"
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/user'
                  token:
                    type: string
        '400':
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  err:
                    type: object

  /user/signup:
    post:
      description: Signup new user
      tags:
        - "login"
      requestBody:
        description: Signup information
        content:
          application/json:
            schema:
              type: object
              required:
                - "username"
                - "firstname"
                - "lastname"
                - "password"
                - "email"
              properties:
                username:
                  type: string
                firstname:
                  type: string
                lastname:
                  type: string
                password:
                  type: string
                email:
                  type: string
      responses:
        '201':
          description: New user is created
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/user'
                  token:
                    type: string
        '400':
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  err:
                    type: object

  /user/logout:
    post:
      description: logs out user from current device
      tags:
        - "logout"
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User logged out from current device

  /user/logoutall:
    post:
      description: logs out user from all devices
      tags:
        - "logout"
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User logged out from all devices

  /user/avatar:
    get:
      description: Gets user avatar
      tags:
        - "profile"
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Got user avatar
          content:
            application/json:
              schema:
                type: string
                properties:
                  avatar:
                    type: string
        '400':
          description: Something wrong :(
          content:
            application/json:
              schema:
                type: object
        '401':
          description: There is no image
          content:
            application/json:
              schema:
                type:  object
                properties:
                  message:
                    type: string

    put:
      description: Edits user avatar
      tags:
        - "profile"
      security:
        - bearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              description: Avatar image to add
      responses:
        '200':
          description: User avatar attached
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    $ref: '#/components/schemas/user'
        '400':
          description: Something wrong :(
          content:
            application/json:
              schema:
                type: object
                properties:
                  e:
                    type: object
                  error:
                    type: string

components:
  securitySchemes:
    bearerAuth:
      description: Auth token ( Bearer + " " + token )
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    user:
      type: object
      properties:
        firstname:
          type: string
        lastname:
          type: string
        avatar:
          type: string
        _id:
          type: string
        username:
          type: string
        email:
          type: string